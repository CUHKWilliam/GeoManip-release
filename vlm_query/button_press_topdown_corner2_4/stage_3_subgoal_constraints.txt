def stage_3_subgoal_constraint1():
    """constraints: <"sub-goal constraints", "the center of the gripper of the robot", "the center of the body of the red button", "the center of the gripper of the robot moves toward the center of the body of the red button by 100 cm">"""
    pc_gripper_previous = get_point_cloud("the gripper of the robot", -2)
    pc_gripper_current = get_point_cloud("the gripper of the robot", -1)
    pc_button = get_point_cloud("the body of the red button", -1)

    # Calculate the center of the gripper and the button
    gripper_center_previous = np.mean(pc_gripper_previous, axis=0)
    gripper_center_current = np.mean(pc_gripper_current, axis=0)
    button_center = np.mean(pc_button, axis=0)

    # Calculate the target position for the gripper
    direction = (button_center - gripper_center_previous) / np.linalg.norm(button_center - gripper_center_previous)
    target_position = gripper_center_previous + direction * 1.0  # 100 cm = 1.0 m

    # Calculate the cost as the distance between the current gripper center and the target position
    cost = np.linalg.norm(gripper_center_current - target_position)
    return cost

